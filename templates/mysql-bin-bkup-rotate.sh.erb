#!/bin/bash


# Backup Date
BKUP_DATE=`date +%Y%m%d`

# Binary Backup Base Dir, File and Log file
MYSQL_BKUP_BASE="<%= scope.lookupvar('mariadb::params::backup_dir') %>"
REMOTE_BKUP="$MYSQL_BKUP_BASE/daily.$BKUP_DATE.tar.bz2"
LOG_DIR="$MYSQL_BKUP_BASE/binbkup-rotate-logs"
mkdir -p $LOG_DIR
LOG="$LOG_DIR/rotate_log_$BKUP_DATE.log"

# Log Start Time 
echo "$(date): START OF SCRIPT" >> $LOG

# Remote Backup Server
SFTP_SRV3="<%= scope.lookupvar('mariadb::params::binary_backup_remote_ip1') %>"
SFTP_SRV1="<%= scope.lookupvar('mariadb::params::binary_backup_remote_ip2') %>"


# Params for Weekends sftp rotate - Keep last 3 weekends and delete older
#
SFTP_KEEP_WEEKEND=`date --date="Last Sunday" +%Y%m%d`
SFTP_DEL_WEEKEND2=`date --date="Last Sunday -14 day" +%Y%m%d`

# Params for 2 months sftp rotate
LAST_MONTH2=`date --date="-2 Month" +%m`
LAST_MONTH2_YR=`date --date="-2 Month" +%Y`
LAST_MONTH2_LASTWEEK=`cal $LAST_MONTH2 $LAST_MONTH2_YR | tail -2`
LAST_MONTH2_END=`for i in $LAST_MONTH2_LASTWEEK ; do echo $i; done | tail -1`
SFTP_DEL_MONTH2=$LAST_MONTH2_YR$LAST_MONTH2$LAST_MONTH2_END

# Params for Last month end sftp rotate
LAST_MONTH1=`date --date="-1 Month" +%m`
LAST_MONTH1_YR=`date --date="-1 Month" +%Y`
LAST_MONTH1_LASTWEEK=`cal $LAST_MONTH1 $LAST_MONTH1_YR | tail -2`
LAST_MONTH1_END=`for i in $LAST_MONTH1_LASTWEEK ; do echo $i; done | tail -1`
SFTP_KEEP_MONTH1=$LAST_MONTH1_YR$LAST_MONTH1$LAST_MONTH1_END


# Params for log rotation
BKUP_LOG_ROT_DT=`date --date="-31 Days" +%Y_%m_%d`
BKUP_LOG_ROT_FILE="${MYSQL_BKUP_BASE}/${BKUP_LOG_ROT_DT}_log.txt"


BKUP_ROT_LOG_ROT_DT=`date --date="-31 Days" +%Y%m%d`
BKUP_ROT_LOG_ROT_FILE="${LOG_DIR}/rotate_log_${BKUP_ROT_LOG_ROT_DT}.log"

# Rotate Remote Backup
#
ROTATE_DAYS="4"
ROTATE_DATE=`date --date="-$ROTATE_DAYS day" +%Y%m%d`
REMOTE_BKUP_4="$MYSQL_BKUP_BASE/daily.$ROTATE_DATE.tar.bz2"
REMOTE_BKUP_14="$MYSQL_BKUP_BASE/daily.$SFTP_DEL_WEEKEND2.tar.bz2"
REMOTE_BKUP_60="$MYSQL_BKUP_BASE/daily.$SFTP_DEL_MONTH2.tar.bz2"

echo " " >> $LOG 
echo "Starting SFTP File rotation" >> $LOG 
echo " " >> $LOG 


# Older than 4th Day but not last 2 weekends or 2 month ends

if [ "$ROTATE_DATE" -ne "$SFTP_KEEP_WEEKEND" ] && [ "$ROTATE_DATE" -ne "$SFTP_KEEP_MONTH1" ]
then

	# Local backup rotation
	#
	echo "Starting Rotation on Local Server" >> $LOG
	echo " " >> $LOG

        echo "Removing backups older than 4 days....$REMOTE_BKUP_4" >> $LOG 
        /bin/rm $REMOTE_BKUP_4 >> $LOG 2>&1
        echo " " >> $LOG 

        echo "Removing backups older than 2 weeks....$REMOTE_BKUP_14" >> $LOG 
        /bin/rm $REMOTE_BKUP_14 >> $LOG 2>&1
        echo " " >> $LOG 

        echo "Removing backups older than 2 months....$REMOTE_BKUP_60" >> $LOG 
        /bin/rm $REMOTE_BKUP_60 >> $LOG 2>&1
        echo " " >> $LOG 

	echo "End of Rotation on Local Server" >> $LOG
	echo " " >> $LOG

	echo " " >> $LOG


	# Remote backup rotation
	#
	echo "Starting Rotation on Remote Server" >> $LOG
	echo " " >> $LOG

				# Search and rotate from BKP03
				#
        echo "Removing backups older than 4 days....daily.$ROTATE_DATE.tar.bz2" >> $LOG 
        echo "rm daily.$ROTATE_DATE.tar.bz2" | sftp $SFTP_SRV3:/ >> $LOG 2>&1
        echo " " >> $LOG 

        echo "Removing backups older than 2 weeks....daily.$SFTP_DEL_WEEKEND2.tar.bz2" >> $LOG 
        echo "rm daily.$SFTP_DEL_WEEKEND2.tar.bz2" | sftp $SFTP_SRV3:/ >> $LOG 2>&1
        echo " " >> $LOG 

        echo "Removing backups older than 2 months....daily.$SFTP_DEL_MONTH2.tar.bz2" >> $LOG 
        echo "rm daily.$SFTP_DEL_MONTH2.tar.bz2" | sftp $SFTP_SRV3:/ >> $LOG 2>&1
        echo " " >> $LOG 


				# Search and rotate from BKP01
				#
        echo "Removing backups older than 4 days....daily.$ROTATE_DATE.tar.bz2" >> $LOG 
        echo "rm daily.$ROTATE_DATE.tar.bz2" | sftp $SFTP_SRV1:/ >> $LOG 2>&1
        echo " " >> $LOG 

        echo "Removing backups older than 2 weeks....daily.$SFTP_DEL_WEEKEND2.tar.bz2" >> $LOG 
        echo "rm daily.$SFTP_DEL_WEEKEND2.tar.bz2" | sftp $SFTP_SRV1:/ >> $LOG 2>&1
        echo " " >> $LOG 

        echo "Removing backups older than 2 months....daily.$SFTP_DEL_MONTH2.tar.bz2" >> $LOG 
        echo "rm daily.$SFTP_DEL_MONTH2.tar.bz2" | sftp $SFTP_SRV1:/ >> $LOG 2>&1
        echo " " >> $LOG 


	echo "End of Rotation on Remote Server" >> $LOG
	echo " " >> $LOG

else
        echo "Not rotating backup files on sftp: Rotate date is either in last 2 weekends or last 2 month ends" >> $LOG 
fi


# Split Backups between BKP01 and BKP03
#
DOW=`date +%u`
DOM_NEXT=`date +%d --date="tomorrow"`

if [ "$DOW" -eq "7" ] || [ "$DOM_NEXT" -eq "01" ]
then
	# Transfer backup to Remote Server BKP01
	echo "Transferring $BKUP_DATE 's backup on to Remote Location..." >> $LOG
	echo "put $REMOTE_BKUP" | sftp $SFTP_SRV1:/ >> $LOG 2>&1
else
	# Transfer backup to Remote Server BKP03
	echo "Transferring $BKUP_DATE 's backup on to Remote Location..." >> $LOG
	echo "put $REMOTE_BKUP" | sftp $SFTP_SRV3:/ >> $LOG 2>&1
fi	



# Purge Old Logs
echo "" >> $LOG
echo "Rotating 31 day old backup log file $BKUP_LOG_ROT_FILE" >> $LOG
rm $BKUP_LOG_ROT_FILE

echo "" >> $LOG
echo "Rotating 31 day old backup rotate log file $BKUP_ROT_LOG_ROT_FILE" >> $LOG
rm $BKUP_ROT_LOG_ROT_FILE


# Log End Time 
echo "$(date): END OF SCRIPT" >> $LOG


# Send Report
mail -s "Tribily: Mysql Backup Rotation Report for $BKUP_DATE" root < $LOG
