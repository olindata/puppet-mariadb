#!/usr/bin/perl
# MySQL monitoring script
# rewritten from script provided by razique.mahroua@gmail.com
# Version 0
#| ----------- Notes de version ----------------------------|
#|                                                          |
#|----------------------------------------------------------|

#| ----------- Usage------ ---------------------------------|
#| ./mysql.pl | ./zabbix_sender  -z zabbix-server -c /etc/zabbix/zabbix_agentd.conf -i -
#|----------------------------------------------------------|

$ZABBIX_CONFIG_FILE="/etc/zabbix/zabbix_agentd.conf";
$MYSQL="/usr/bin/mysql";
$MYSQL_USER="<%= scope.lookupvar('mariadb::params::monitor_user') %>";
$MYSQL_PASS="<%= scope.lookupvar('mariadb::params::monitor_pass') %>";
$MYSQL_GLOBAL_VARIABLES="SHOW GLOBAL VARIABLES";
$MYSQL_GLOBAL_STATUS="SHOW GLOBAL STATUS";
$MYSQL_REPLICATION="SHOW SLAVE STATUS";
$MYSQL_DELIMITER='";';

# Read Config
open(FILE, $ZABBIX_CONFIG_FILE) or die("Unable to open file");
@config_file = <FILE>;
close(FILE);
foreach (@config_file) {
        chomp;
        s/^\s+//g;
        next if /^(#|\n)/;
        ($key,$val) = split /=/;
        $config{$key} = $val;
}

$ZABBIX_HOSTNAME=$config{'Hostname'};

# 1- Values that will be given to the zabbix_sender
@variables = qw (
innodb_additional_mem_pool_size
innodb_buffer_pool_size
innodb_file_io_threads
innodb_log_buffer_size
innodb_log_file_size
innodb_max_dirty_pages_pct
innodb_open_files
innodb_thread_concurrency
innodb_thread_sleep_delay
join_buffer_size
long_query_time
max_allowed_packet
max_binlog_cache_size
max_binlog_size
max_connect_errors
max_connections
max_delayed_threads
max_heap_table_size
max_join_size
max_length_for_sort_data
max_prepared_stmt_count
open_files_limit
query_alloc_block_size
query_cache_limit
query_cache_min_res_unit
query_cache_size
query_cache_type
query_cache_wlock_invalidate
query_prealloc_size
read_buffer_size
sort_buffer_size
sql_max_join_size
sql_select_limit
sync_binlog
table_lock_wait_timeout
thread_cache_size
table_open_cache
tmp_table_size
wait_timeout
);

@status = qw (
Aborted_clients
Aborted_connects
Bytes_received
Bytes_sent
Com_commit
Com_delete
Com_delete_multi
Com_execute_sql
Com_help
Com_insert
Com_insert_select
Com_lock_tables
Com_optimize
Com_replace
Com_replace_select
Com_rollback
Com_select
Com_update
Com_update_multi
Connections
Created_tmp_disk_tables
Created_tmp_files
Created_tmp_tables
Delayed_errors
Delayed_insert_threads
Delayed_writes
Innodb_buffer_pool_pages_data
Innodb_buffer_pool_pages_dirty
Innodb_buffer_pool_pages_flushed
Innodb_buffer_pool_pages_free
Innodb_buffer_pool_pages_misc
Innodb_buffer_pool_pages_total
Innodb_buffer_pool_read_requests
Innodb_buffer_pool_reads
Innodb_buffer_pool_wait_free
Innodb_buffer_pool_write_requests
Innodb_data_pending_fsyncs
Innodb_data_pending_reads
Innodb_data_pending_writes
Innodb_data_read
Innodb_data_reads
Innodb_data_writes
Innodb_data_written
Innodb_log_waits
Innodb_log_write_requests
Innodb_log_writes
Innodb_page_size
Innodb_pages_created
Innodb_pages_read
Innodb_pages_written
Innodb_rows_deleted
Innodb_rows_inserted
Innodb_row_lock_current_waits
Innodb_rows_read
Innodb_rows_updated
Max_used_connections
Open_files
Opened_files
Open_tables
Qcache_free_blocks
Qcache_free_memory
Qcache_hits
Qcache_inserts
Qcache_total_blocks
Queries
Questions
Slow_queries
Table_locks_immediate
Table_locks_waited
Threads_cached
Threads_connected
Threads_created
Threads_running
Uptime
);

@replication = qw (

);

# 2- We extract the raw values for both values (global and status)
open (EXEC,"echo $MYSQL_GLOBAL_VARIABLES | $MYSQL -u $MYSQL_USER -p$MYSQL_PASS |");
while (<EXEC>) {
        ($key,$val) = split /\s+/;
        $hashGlobalVars{$key} = $val;
}
open (EXEC,"echo $MYSQL_GLOBAL_STATUS | $MYSQL -u $MYSQL_USER -p$MYSQL_PASS |");
while (<EXEC>) {
        ($key,$val) = split /\s+/;
        $hashGlobalStatus{$key} = $val;
}
open (EXEC,"echo $MYSQL_REPLICATION | $MYSQL -u $MYSQL_USER -p$MYSQL_PASS |");
while (<EXEC>) {
        ($key,$val) = split /\s+/;
        $hashReplication{$key} = $val;
}

# 3- We finally send the values to stdout for the zabbix sender script.

$output = "";

foreach (@status) {
        $output .= "$ZABBIX_HOSTNAME mysql.status." . $_ . " " .  $hashGlobalStatus{$_} . "\n";
}

foreach (@variables) {
        $output .= "$ZABBIX_HOSTNAME mysql.variables." . $_ . " " . $hashGlobalVars{$_} . "\n";
}

foreach (@replication) {
        $output .= "$ZABBIX_HOSTNAME mysql.variables." . $_ . " " . $hashReplication{$_} . "\n";
}


print $output;

