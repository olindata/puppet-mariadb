#!/bin/bash
###########################################################
# PUPPET MANAGED                                          #
# Do not edit this file on a server node unless you       #
# are willing to have your changes overwritten by         #
# Puppet.  If you really want to change the contents      #
# repository and check it out on the puppet server.          #
###########################################################

# Load common settings.

. /etc/mysql_backup.conf

# Logger function
function syslog()
{
  logger -i -p daemon.info -t mysqldump "$1"
}

syslog "Starting database dump run"

#
# No more editing!
#

# Get the date variables
year=`/bin/date +%Y`
month=`/bin/date +%m`
day=`/bin/date +%d`

# Log Start time
syslog "START OF SCRIPT"


# Lockfile.
LOCKFILE="${BACKUP_DIR}/backup.lock"

# Test for lock file.
echo "Test for lock file."
if [ -e ${LOCKFILE} ] ;then
  syslog "Lockfile ${LOCKFILE} exists."
  exit 1
fi

# Write pid to lockfile.
echo $$ > ${LOCKFILE}

# Check if the highest numbered daily backup exist and delete it
if [ -d "${BACKUP_DIR}/daily.${KEEP_DAILY}" ]; then
  syslog "Expire oldest daily backup: ${BACKUP_DIR}/daily.${KEEP_DAILY}"
  /bin/rm -rf ${BACKUP_DIR}/daily.${KEEP_DAILY}
fi

# Rename all daily backups to N+1
for i in $(seq ${KEEP_DAILY} -1 0); do
  if [ -d "${BACKUP_DIR}/daily.${i}" ]; then
    new=$((${i} + 1))
    syslog "Rename daily backup ${i} to ${new}"
    /bin/mv -f "${BACKUP_DIR}/daily.${i}" "${BACKUP_DIR}/daily.${new}"
  fi
done

# Create new daily backup
syslog "Creating daily backup in ${BACKUP_DIR}/daily.0"
mkdir -p "${BACKUP_DIR}/daily.0"
/usr/bin/ionice -c3 $BACKUP_BIN "${BACKUP_DIR}/daily.0" --user=${MYSQL_USER} --pass=${MYSQL_PASS}

# Tar it up
syslog "Creating archive of daily backup in ${BACKUP_DIR}/daily.${year}${month}${day}.tar.bz2"
/usr/bin/ionice -c3 /bin/tar -cjf "${BACKUP_DIR}/daily.${year}${month}${day}.tar.bz2" "${BACKUP_DIR}/daily.0"


# Log End Time
syslog "END OF SCRIPT"

# Call rotation script
bash /backup/mysql/scripts/mysql-bin-bkup-rotate.sh

# Remove lockfile.
/bin/rm -f ${LOCKFILE}
